def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

node {
    
 try { 
   def mavenHome = tool name : 'maven3.8.6'
    
    stage('fetching code from github') {
        sendSlackNotifications('STARTED')
        git branch: 'development', credentialsId: '1dfbc4b8-0a76-4d21-9901-35a6a63d22a0', url: 'https://github.com/MBUK9493/maven-web-application.git'
        
    }
    
    stage('maven') {
        
        sh " $mavenHome/bin/mvn clean package "
        
    }
    
    stage('sonarqube') {
        
        sh " $mavenHome/bin/mvn sonar:sonar "
        
    }
    
    stage('nexus') {
        
        sh " $mavenHome/bin/mvn deploy "
        
    }
    
    stage('tomcat') {
        
        sshagent(['395f0fef-fbe4-4ba6-bcfc-16713d5369b2']) {
            
        sh " scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.110.55.103:/opt/apache-tomcat-9.0.64/webapps "
}
 }
 }
  catch(e){
  currentBuild.result = "FAILED"
  }
  finally{
  sendSlackNotifications(currentBuild.result)
  }
}
